package models

import (
	"time"
)

// The Event type contains various fields related to an event, including its ID, timestamp, source
// information, metadata, and data.
//
// @property {string} EventID - A unique identifier for the event generated by the audit log.
// @property Timestamp - The timestamp in nanoseconds of the moment the audit log received the event.
// @property {string} SourceEventID - The ID of the event provided by the source service that generated
// the event.
// @property SourceTimestamp - The timestamp in nanoseconds provided by the source service. This is the
// time at which the event occurred according to the source service.
// @property {string} CorrelationID - The CorrelationID is an identifier that is used to link related
// events together. It is useful in cases where multiple events are generated as part of a single
// process or transaction, and it allows for easier tracking and analysis of the events. For example,
// if a user submits an order and multiple events are generated.
// @property {string} SourceTimezone - The timezone of the source service that generated the event. It
// is a string value.
// @property {string} SourceServiceName - The name of the service that generated the event.
// @property {string} SourceServiceLocation - The geographical information of the source service, which
// could include the latitude and longitude coordinates, city, state/province, country, etc.
// @property {string} SourceIPAddress - The IP address of the source service that generated the event.
// @property EventTags - EventTags is a map of string key-value pairs that contains metadata related to
// the event. This can include information such as the event type, severity, or any other relevant
// information that can help with event processing and analysis.
// @property {string} EventDataHash - Event data hash or checksum is a value that is calculated based
// on the contents of the event data. It is used to ensure the integrity of the event data and detect
// any changes or tampering that may have occurred during transmission or storage. The hash value is
// typically generated using a cryptographic hash function.
// @property {string} EventDataVersion - The version of the event data being recorded. This can be
// useful for tracking changes to the data structure over time.
// @property EventData - EventData is a map[string]interface{} property of the Event struct. It is a
// variant event data that can contain any type of data depending on the type of event. This property
// is used to store the actual data of the event that is being logged. The data can be in any format
// such as JSON
type Event struct {
	EventID               string                 `bson:"EventID" json:"EventID"`                             // Event Unique ID generated by the audit log
	Timestamp             time.Time              `bson:"Timestamp" json:"Timestamp"`                         // Timestamp in nanoseconds of the moment the audit log received the event
	SourceEventID         string                 `bson:"SourceEventID" json:"SourceEventID"`                 // Event ID provided by the source service
	SourceTimestamp       time.Time              `bson:"SourceTimestamp" json:"SourceTimestamp"`             // Timestamp in nanoseconds provided by the source service
	CorrelationID         string                 `bson:"CorrelationID" json:"CorrelationID"`                 // Event correlation ID in case other events are related
	SourceTimezone        string                 `bson:"SourceTimezone" json:"SourceTimezone"`               // Timezone of source service
	SourceServiceName     string                 `bson:"SourceServiceName" json:"SourceServiceName"`         // Name of source service
	SourceServiceLocation string                 `bson:"SourceServiceLocation" json:"SourceServiceLocation"` // Source service geographical information
	SourceIPAddress       string                 `bson:"SourceIPAddress" json:"SourceIPAddress"`             // Source service IP address
	EventTags             map[string]string      `bson:"EventTags" json:"EventTags"`                         // Event metadata
	EventDataHash         string                 `bson:"EventDataHash" json:"EventDataHash"`                 // Event data hash or checksum for integrity
	EventDataVersion      string                 `bson:"EventDataVersion" json:"EventDataVersion"`           // Event data version
	EventData             map[string]interface{} `bson:"EventData" json:"EventData"`                         // Variant event data depending on their type
}
